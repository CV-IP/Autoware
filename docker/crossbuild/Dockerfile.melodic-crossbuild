ARG AUTOWARE_DOCKER_ARCH
ARG AUTOWARE_TARGET_ARCH
FROM multiarch/alpine:${AUTOWARE_TARGET_ARCH}-latest-stable AS bootstrap

FROM ${AUTOWARE_DOCKER_ARCH}/ubuntu:18.04 AS sysroot
ARG AUTOWARE_TARGET_ARCH

COPY --from=bootstrap /usr/bin/qemu-${AUTOWARE_TARGET_ARCH}-static /usr/bin/qemu-${AUTOWARE_TARGET_ARCH}-static

RUN apt-get update
RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg

RUN echo "deb http://packages.ros.org/ros/ubuntu bionic main" | tee /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    lsb-release \
    python-rosdep \
    sudo

# adwaita-icon-theme humanity-icon-theme and ubuntu-mono install the following as dependencies,
# however when attempting to installing the former, dpkg fails due to an unknown error, so we
# install the separately
RUN apt-get update && apt-get install -y --no-install-recommends \
    fontconfig \
    fontconfig-config \
    fonts-dejavu-core \
    gtk-update-icon-cache \
    hicolor-icon-theme \
    libbsd0 \
    libcairo2 \
    libcroco3 \
    libdatrie1 \
    libfontconfig1 \
    libfreetype6 \
    libgdk-pixbuf2.0-0 \
    libgdk-pixbuf2.0-common \
    libglib2.0-0 \
    libgraphite2-3 \
    libharfbuzz0b \
    libicu60 \
    libjbig0 \
    libjpeg-turbo8 \
    libjpeg8 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libpangoft2-1.0-0 \
    libpixman-1-0 \
    libpng16-16 \
    librsvg2-2 \
    librsvg2-common \
    libthai-data \
    libthai0 \
    libtiff5 \
    libx11-6 \
    libx11-data \
    libxau6 \
    libxcb-render0 \
    libxcb-shm0 \
    libxcb1 \
    libxdmcp6 \
    libxext6 \
    libxml2 \
    libxrender1 \
    multiarch-support \
    shared-mime-info \
    ucf

# Install these adwaita-icon-theme humanity-icon-theme and ubuntu-mono separately to avoid
# dpkg errors
RUN apt-get update && apt-get install -y --no-install-recommends \
    adwaita-icon-theme \
    humanity-icon-theme \
    ubuntu-mono

# Autoware dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    cython \
    freeglut3-dev \
    gstreamer1.0-plugins-good \
    libarmadillo-dev \
    libcurl4-openssl-dev \
    libeigen3-dev \
    libgflags-dev \
    libgl1-mesa-dev \
    libglew-dev \
    libglu1-mesa-dev \
    libgoogle-glog-dev \
    libgstreamer-plugins-good1.0-0 \
    libgtest-dev \
    libnlopt-dev \
    libopencv-dev \
    libpcap0.8-dev \
    libpcl-dev \
    libqt5core5a \
    libqt5gui5 \
    libqt5opengl5 \
    libqt5opengl5-dev \
    libqt5widgets5 \
    libssh2-1 \
    libtinyxml-dev \
    libx11-dev \
    libxi-dev \
    libxml2-dev \
    libxmu-dev \
    libyaml-cpp-dev \
    python-flask \
    python-scipy \
    python-serial \
    python-skimage \
    qtbase5-dev \
    ros-melodic-angles \
    ros-melodic-automotive-platform-msgs \
    ros-melodic-camera-info-manager \
    ros-melodic-catkin \
    ros-melodic-cmake-modules \
    ros-melodic-cv-bridge \
    ros-melodic-diagnostic-aggregator \
    ros-melodic-diagnostic-msgs \
    ros-melodic-diagnostic-updater \
    ros-melodic-dynamic-reconfigure \
    ros-melodic-eigen-conversions \
    ros-melodic-filters \
    ros-melodic-geometry-msgs \
    ros-melodic-gps-common \
    ros-melodic-gscam \
    ros-melodic-image-geometry \
    ros-melodic-image-transport \
    ros-melodic-imu-filter-madgwick \
    ros-melodic-imu-tools \
    ros-melodic-jsk-footstep-msgs \
    ros-melodic-jsk-gui-msgs \
    ros-melodic-jsk-hark-msgs \
    ros-melodic-jsk-tools \
    ros-melodic-jsk-topic-tools \
    ros-melodic-message-filters \
    ros-melodic-message-generation \
    ros-melodic-message-runtime \
    ros-melodic-nav-msgs \
    ros-melodic-nlopt \
    ros-melodic-nmea-msgs \
    ros-melodic-nodelet \
    ros-melodic-pcl-conversions \
    ros-melodic-pcl-msgs \
    ros-melodic-pcl-ros \
    ros-melodic-people-msgs \
    ros-melodic-pluginlib \
    ros-melodic-posedetection-msgs \
    ros-melodic-robot-state-publisher \
    ros-melodic-rosbridge-server \
    ros-melodic-rosconsole \
    ros-melodic-roscpp \
    ros-melodic-roslaunch \
    ros-melodic-roslib \
    ros-melodic-roslint \
    ros-melodic-rospy \
    ros-melodic-rostest \
    ros-melodic-rosunit \
    ros-melodic-rqt-plot \
    ros-melodic-rviz \
    ros-melodic-sensor-msgs \
    ros-melodic-shape-msgs \
    ros-melodic-sound-play \
    ros-melodic-std-msgs \
    ros-melodic-std-srvs \
    ros-melodic-stereo-msgs \
    ros-melodic-tf \
    ros-melodic-tf-conversions \
    ros-melodic-tf2 \
    ros-melodic-tf2-geometry-msgs \
    ros-melodic-tf2-ros \
    ros-melodic-urdfdom-py \
    ros-melodic-view-controller-msgs \
    ros-melodic-visualization-msgs \
    ros-melodic-xacro \
    v4l-utils

RUN find / -depth -xdev -type l -lname '/*' -exec sh -c 'linkpath="$(readlink {})" && rm -f {} && ln -frsv "$linkpath" "{}"' \;

FROM ubuntu:18.04 AS builder
ARG AUTOWARE_TARGET_ARCH
ARG AUTOWARE_TARGET_PLATFORM
ENV AUTOWARE_SYSROOT /sysroot/${AUTOWARE_TARGET_PLATFORM}
COPY --from=sysroot /lib ${AUTOWARE_SYSROOT}/lib
COPY --from=sysroot /usr/include ${AUTOWARE_SYSROOT}/usr/include
COPY --from=sysroot /usr/lib ${AUTOWARE_SYSROOT}/usr/lib
COPY --from=sysroot /usr/share/pkgconfig ${AUTOWARE_SYSROOT}/usr/share/pkgconfig
COPY --from=sysroot /opt ${AUTOWARE_SYSROOT}/opt
COPY --from=sysroot /etc/alternatives ${AUTOWARE_SYSROOT}/etc/alternatives
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    tzdata
RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg
RUN echo "deb http://packages.ros.org/ros/ubuntu bionic main" | tee /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
RUN apt-get update && apt-get install -y --no-install-recommends \
    cython \
    crossbuild-essential-arm64 \
    pkg-config \
    python-rospkg \
    qt5-qmake \
    qtbase5-dev-tools \
    ros-melodic-catkin
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/opt/ros/melodic/include#${AUTOWARE_SYSROOT}/opt/ros/melodic/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/opt/ros/melodic/lib#${AUTOWARE_SYSROOT}/opt/ros/melodic/lib#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/include#${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib#${AUTOWARE_SYSROOT}/usr/lib#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib/openmpi#${AUTOWARE_SYSROOT}/usr/lib/openmpi#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/include#${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/lib/pkgconfig/ -name "*.pc" -type f -exec sed -i -e "s#-I/opt/ros/melodic/usr/include#-I${AUTOWARE_SYSROOT}/opt/ros/melodic/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/lib/pkgconfig/ -name "*.pc" -type f -exec sed -i -e "s#-I/usr/include#-I${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/ -name "*.pc" -type f -exec sed -i -e "s#prefix=/#prefix=${AUTOWARE_SYSROOT}/#g" {} \;
RUN sed -i -e "s#/usr#${AUTOWARE_SYSROOT}/usr#g" ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/pcl/PCLConfig.cmake
RUN sed -i -e "s#set(imported_location \"\${_qt5Widgets_install_prefix}/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/qt5/bin/uic\")#set(imported_location \"/usr/lib/x86_64-linux-gnu/qt5/bin/uic\")#g" \
    ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake
RUN sed -i -e "s#set(imported_location \"\${_qt5Core_install_prefix}/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/qt5/bin/#set(imported_location \"/usr/lib/x86_64-linux-gnu/qt5/bin/#g" \
    ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtras.cmake
RUN sed -i -e "s#define ARMA_SUPERLU_INCLUDE_DIR /usr/include/superlu/#define ARMA_SUPERLU_INCLUDE_DIR ${AUTOWARE_SYSROOT}/usr/include/superlu/#g" \
    ${AUTOWARE_SYSROOT}/usr/include/armadillo_bits/config.hpp

RUN apt-get install -y python-numpy
RUN apt-get install -y python-pip python-setuptools
RUN pip install -U setuptools
RUN apt-get install -y python3-pip python3-setuptools
RUN pip3 install -U setuptools
RUN apt-get install -y python3-colcon-common-extensions

ENV ROS_DISTRO melodic
ENV CC /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-gcc
ENV CXX /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-g++
ENV AR /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-ar
ENV CPP /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-cpp
CMD . /opt/ros/melodic/setup.sh && /bin/bash
